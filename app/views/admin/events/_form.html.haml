.row.expanded  
  .small-12.columns
    %h1 Event!
    
= semantic_nested_form_for [:admin, @event], :html => {:class => "custom", :"data-abide" => '', :multipart => true} do |f|
  .row.expanded
    .small-12.columns   
      %h2 Essential information
  .row.expanded
    .small-3.columns
      = f.input :subsite,  :as => :select, :collection => Subsite.accessible_by(current_ability).order(:id),  :include_blank => false, :label => ' Which website should this appear on?'
  %section.event_form_section.even
    .row.expanded
      .small-6.columns
        %h4 When?
        .row.expanded
          .small-6.columns
            = f.input :start_at, :as => :string, :input_html => {:required => '', :class => "datetime_picker", value: f.object.new_record? ? '' : f.object.start_at.strftime('%Y-%m-%d %H:%M')}
            %small.error You must enter a start date and time.
          .small-6.columns= f.input :end_at, :as => :string, :input_html => {:class => "datetime_picker", value: f.object.new_record? ? '' : (f.object.end_at.nil? ? '' : f.object.end_at.strftime('%Y-%m-%d %H:%M'))}
  %section.event_form_section
    .row.expanded
      .small-12.columns
        %h4 What?
        %ul.tabs#languages{"data-tabs" => ""}
          - I18n.available_locales.each_with_index do |locale, i|
            %li.tabs-title{:class => (i == 0 ? 'is-active' : false)}
              = link_to t(:locale_name, :locale => locale), "##{locale}"
        .tabs-content{:"data-tabs-content" => "languages"}
          - I18n.available_locales.each_with_index do |locale, i|
            .tabs-panel{:class => (i == 0 ? 'is-active' : false), :id => "#{locale}"}
              = f.globalize_fields_for locale do |en|
                .row.expanded
                  .small-12.columns
                    %b= "Name of event in #{t :locale_name, :locale => locale}"
                    = en.text_field :name, :required => (locale == :en ? '' : false)
                    - if locale == :en
                      %small.error You must enter an English name for the event.
                .row.expanded
                  .small-12.columns
                    %b= "Description of event in #{t :locale_name, :locale => locale}"
                    = en.cktext_area :description
                .row.expanded
                  .small-6.columns
                    %b= "Notes or other metadata in #{t :locale_name, :locale => locale}"
                    = en.text_area :notes
    .row.expanded
      .small-12.columns
        - if f.object.image?
          = image_tag f.object.image.url(:box)
          = f.input :image, label: 'Change this image', hint: 'You must have one image to represent this event.'                  
        - else
          = f.input :image, label: 'Choose an image for this event', hint: 'You must have one image to represent this event. For archival documentation images/photos, add them below.'                  
    .row.expanded
      .small-4.columns
        = f.input :festival, :label => 'Is this event part of a festival?', collection: Festival.all.order(start_at: :desc)
        = f.input :festivalthemes, :label => 'If so, is it part of a festival theme?', :member_label => :name_and_festival, :hint => 'Make sure you match the right festival!'
        = f.input :tag_list, :label => 'Additional festival tags', :hint => 'separate by commas; only used for some years'
      .small-4.columns
        = f.input :residency, :label => 'Is this event atttached to a residency?', collection: Residency.all.order(start_at: :desc)
      .small-4.columns
        = f.input :project, :collection => Project.active_menu, :label => 'Is this event part of a project?'
  %section.event_form_section.even
    .row.expanded 
      .small-12.columns
        %h4 Where?
    .row.expanded
      
      .small-6.columns
        = f.input :place_name, :as => :autocomplete, :url =>  autocomplete_place_name_admin_events_path, :input_html => { :required => '', :id_element => '#event_place_id', :data => {:no_matches_label => 'Not in database yet'}}, :label => "Where does this take place?", :hint => raw("(If it's a place not already the database, <a href=\"/admin/places/new\" target=\"_blank\">create it first.</a>)")
        %small.error You must select a place for this event.
      .small-6.columns
        = f.input :place_id, :as => :hidden      
    .row.expanded
      .small-8.columns
        = f.input :location_tbd, label: 'Location not yet announced?'
  %section.event_form_section
    .row.expanded
      .small-12.columns
        %h4 Who?
        %ul.tabs#who{"data-tabs" => ""}
          %li.tabs-title.is-active= link_to "Contributors", "#contributors"
          %li.tabs-title=link_to "Legacy faciltators", "#legacy"
        .tabs-content{:"data-tabs-content" => "who"}
          .tabs-panel.is-active#contributors
            = f.input :contributors, label: 'Select contributors for this event. These contributors must already exist in the CMS; if they aren\'t there, <a href="/admin/contributors/new" target="_blank">create them first.</a>'.html_safe
          .tabs-panel#legacy
            %strong Legacy facilitators
            %p For new events please use the 'contributors' system instead; these fields are for old/legacy events.
            = f.input :facilitator_name
            = f.input :facilitator_url

            = f.input :facilitator_organisation
            = f.input :facilitator_organisation_url

  %section.event_form_section.even
    .row.expanded
      .small-12.columns
        %h4 Extra information
        %ul.tabs#extras{"data-tabs" => ""}
          %li.tabs-title.is-active=link_to "External links", "#external"
          %li.tabs-title=link_to "Registration forms", "#registration"
          %li.tabs-title=link_to "Fees and costs", "#fees"
          %li.tabs-title=link_to "Misc. options", "#misc"
        .tabs-content{:"data-tabs-content" => "extras"}
          .tabs-panel.is-active#external 
            = f.input :facebook_link, :hint => 'URL to a Facebook Event page', :as => :string
            = f.input :stream_url, label: 'URL to online stream:', hint: 'If this is a streaming event, enter the URL to the Twitch (or whatever) stream here'
            = f.input :external_registration, :hint => 'URL for external registration (Eventbrite, for example)', :as => :string
          .tabs-panel#registration 
            = f.input :registration_required, as: :boolean
            = f.input :max_attendees
            = f.input :email_registrations_to, as: :string, input_html: {type: :text}
            = f.input :question_motivation, label: 'Additional question #1:'
            = f.input :question_description, label: 'Additional question #2:'
            = f.input :question_creators, label: 'Additional question 3:'
            = f.input :require_approval, as: :boolean
            = f.input :hide_registrants, as: :boolean, label: 'Don\'t show number of spaces left?'
            = f.input :show_guests_to_public, as: :boolean      
          .tabs-panel#fees
            = f.input :cost, label: "Is there a cost/fee for this event?", hint: 'Enter only a number, ex 4 for 4€, 8.50 for 8,50€'
            = f.input :cost_alternate, :label => 'Alternate/discounted cost?', hint: "If the event has a lower price for students, unemployed, etc. enter the second cost here"
            = f.input :cost_alternate_reason, :hint => 'Reason for discount (example: student price, unemployed, etc.)'
          .tabs-panel#misc
            %legend
            %strong Open-Sourcing Festivals content
            = f.input :step
            = f.input :resources_needed
            = f.input :protocol
            = f.input :technology_list, :label => 'Technologies (tags)', :hint => 'separate by commas'
  %section.event_form_section
    .row.expanded
      .small-12.columns
        %h3 Documentation  
        %p After the event has taken place, here you can upload photos of the event, attach links to YouTube or Vimeo videos, or upload sound files, PDFs, or other documents.
        %ul.tabs#documentation{"data-tabs" => ""}
          %li.tabs-title.is-active= link_to "Photos", "#photos"
          %li.tabs-title=link_to "Videos", "#videos"
          %li.tabs-title=link_to "Attachments", "#attachments"
        .tabs-content{:"data-tabs-content" => "documentation"}
          .tabs-panel.is-active#photos
            %h4 Photos
            %p Here you can upload images, such as archival photos, documenting an event. 
            = f.fields_for :photos do |ff|           
              .small-4.columns
                - if !ff.object.new_record?
                  - unless ff.object.filename.blank?
                    = image_tag ff.object.filename.url(:box)
                    = ff.input :filename, :label => t(:change_photo)
                - else
                  = ff.input :filename, :label => t(:choose_photo)
              .small-8.columns
                = ff.input :title
                = ff.input :credit
              = ff.link_to_remove t(:remove_photo), :class => [:button, :round, :alert, :tiny]
            .new_attachment= f.link_to_add 'Add a photo/image...', :photos, :class => [:button, :round, :tiny]
          .tabs-panel#videos
            %h4 Videos
            %p Add links to Vimeo or YouTube videos from the event here.
            = f.fields_for :videos do |ff|

              .small-8.columns
                - if !ff.object.new_record?
                  - unless ff.object.new_record?
                    - if ff.object.thumbnail.blank?
                      %p= ff.object.hostid
                    - else
                      %p= image_tag ff.object.thumbnail.url(:thumb)
                      %p= ff.object.title
                      
                      = ff.input :in_url, label: t(:url_to_video), input_html: { value: ff.object.url }
                - else
                  = ff.input :in_url, label: t(:url_to_video)
              = ff.link_to_remove t(:remove_video), class: [:button, :round, :alert, :tiny]
            = f.link_to_add 'Add a video....', :videos, class: [:button, :round, :tiny]
          .tabs-panel#videos
            %h4 Attachments
            = f.input :archive_by_contributor, label: 'Archive by contributor?', hint: 'If ticked, archive material/attachments can be subdivided by contributor and uploaded not below, but through the contributor page.'
            %p (If 'archive by contributor' is ticked above, do not upload attachments here for the event but on the specific contributor CMS form)
            = f.fields_for :attachments do |ff|
              .attachment
                .small-8.columns
                  - if !ff.object.new_record?
                    - unless ff.object.attachedfile.blank? 
                      - if ff.object.attachedfile_content_type =~ /^image/
                        = image_tag ff.object.attachedfile.url
                      - elsif ff.object.attachedfile_content_type =~ /^audio/
                        %audio{controls: ''}
                          %source{src: ff.object.attachedfile.url, type: ff.object.attachedfile_content_type}
                      - else
                        = ff.object.attachedfile

                      = ff.input :attachedfile, :label => t(:replace_file)
                  - else
                    = ff.input :attachedfile, :label => t(:choose_file)
                  = ff.link_to_remove t(:remove_attachment), :class => [:button, :round, :alert, :tiny]
            = f.link_to_add 'Add an attachment or archival item...', :attachments, :class => [:button, :round]    
  %section.event_form_section.even
    .row.expanded
      .small-12.columns
        %h3 Final touches
    .row.expanded 
      .small-5.columns= f.input :user_id, :as => :select, :collection => User.all.order(:name), :label => "Who created this event?", :hint => "Leave blank to display 'Pixelache' on the site", :include_blank => true
    .row.expanded
      .small-12.columns= f.input :add_to_newsfeed, :as => :boolean, :label => "Add to newsfeed on Pixelache frontpage?"
    .row.expanded
      .small-12.columns= f.input :published, :hint => 'Tick this box to publish this on the site, or else the public will never see it'
  .row.expanded
    .small-7.columns
      %hr
      = f.submit "Save", :class => [:button, :large, :round]
:javascript
  $('select#event_festivaltheme_ids').chosen();
  $('select#event_contributor_ids').chosen();     