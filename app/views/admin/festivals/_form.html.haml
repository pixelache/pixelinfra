= semantic_form_for [:admin, @festival], :html => {:"data-abide" => '', :class => "custom", :multipart => true} do |f|
  .row
    .small-6.columns= f.input :node, :include_blank => false, :input_html => {:required => ''}
  .row
    .small-6.columns= f.input :name, :input_html => {:required => ''}
  .row
    .small-6.columns= f.input :subtitle
  .row
    .small-6.columns= f.input :website
  .row
    .small-6.columns= f.input :start_at, :as => :string, :input_html => {:class => "datetime_picker", :required => ''}
    .small-6.columns= f.input :end_at, :as => :string, :input_html => {:class => "datetime_picker", :required => ''}
  .row
    %dl.tabs{"data-tab" => ""}
      - I18n.available_locales.each_with_index do |locale, i|
        %dd{:class => (i == 0 ? :active : false)}
          = link_to t(:locale_name, :locale => locale), "##{locale}"
    .tabs-content
      - I18n.available_locales.each_with_index do |locale, i|
        .content{:class => (i == 0 ? :active : false), :id => "#{locale}"}
          = f.globalize_fields_for locale do |en|
            .row
              .small-12.columns
                %b= "Overview of festval (for its frontpage) in #{t :locale_name, :locale => locale}"
                = en.cktext_area :overview_text
                    
  .row
    .small-6.columns
      - if f.object.image?
        = image_tag f.object.image.url(:box)
        = f.input :remove_image, :as => :boolean
      = f.input :image
  .row
    .small-6.columns
      = f.input :slug, :label => 'Override slug'
  .row
    .small-2.columns= f.input :background_colour, :as => :string, :input_html => {:class => :colourpicker }, :label => 'Main colour for archive page background'
  .row
    .small-2.columns= f.input :primary_colour, :as => :string, :input_html => {:class => :colourpicker }, :label => 'Secondary colour for archive page text'    
  .row
    .small-2.columns= f.submit 'Save', :class => [:button, :round]
= content_for :jquery do
  :plain
    $(document).delegate('span.jPicker', 'click', function() {
            var els = $('.jPicker.Container');
            for(var i = 0; i < $.jPicker.List.length; i++) {
                var o = $($.jPicker.List[i]).offset();
                $(els.get(i)).offset({top: o.top - 50, left: o.left + 100});
            }
        });
  
    $('.colourpicker').jPicker();
        