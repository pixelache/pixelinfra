= semantic_nested_form_for [:admin, @project], :html => {:class => "custom", :multipart => true} do |f|
  .row
    .small-6.columns= f.input :name
  .row
    .small-6.columns
      %label Is this a sub-project of another project?
      = f.input :parent, :collection => Project.all.order(:name)
  .row
    .small-6.columns
      %label External website URL:
      = f.input :website
  .row
    %dl.tabs{"data-tab" => ""}
      - I18n.available_locales.each_with_index do |locale, i|
        %dd{:class => (i == 0 ? :active : false)}
          = link_to t(:locale_name, :locale => locale), "##{locale}"
    .tabs-content
      - I18n.available_locales.each_with_index do |locale, i|
        .content{:class => (i == 0 ? :active : false), :id => "#{locale}"}
          = f.globalize_fields_for locale do |en|
            .row
              .small-12.columns
                %b= "Page content in #{t :locale_name, :locale => locale}"
                = en.cktext_area :description
  .row
    .small-4.columns
      %label Did this project evolve from another project?
      = f.input :evolvedfrom, :collection => Project.all.order(:name)
      %label If so, then what year did the evolved project begin?
      = f.input :evolution_year

  .row
    .small-12.columns
      %label Images
      %p Images will show at the top of the project page. If there is more than 1, a slideshow will be shown.
      .row
        = f.semantic_fields_for :photos do |ff|

          .small-3.columns
            - if ff.object.filename?
              = image_tag ff.object.filename.url(:thumb)
            = ff.input :filename
            = ff.link_to_remove 'Remove this image', class: [:button, :alert, :round, :tiny]
      = f.link_to_add 'Add a photo', :photos, class: [:button, :round, :tiny]
  .row
    .small-8.columns
      %fieldset
        %legend
          %strong Videos
        %p Add links to Vimeo or YouTube videos from the event here.
        = f.fields_for :videos do |ff|
          .row
            .small-8.columns
              - if !ff.object.new_record?
                - unless ff.object.new_record?
                  - unless ff.object.thumbnail.blank?
                    %p= image_tag ff.object.thumbnail.url(:thumb)
                    %p= ff.object.title
                    = ff.input :in_url, label: t(:url_to_video), input_html: { value: ff.object.url }
              - else
                = ff.input :in_url, label: t(:url_to_video)
          = ff.link_to_remove t(:remove_video), class: [:button, :round, :alert, :tiny]
        = f.link_to_add 'Add a video....', :videos, class: [:button, :round, :tiny]
              
  .row
    .small-6
      %label Attachments
      %p You can upload any other files that can be downloaded from the Project page.
  .row
    = f.semantic_fields_for :attachments do |ff|

      .small-3.columns
        - if ff.object.attachedfile?
          = ff.object.attachedfile
          = link_to 'Download', ff.object.attachedfile.url, :class => [:button, :round, :tiny]
        = ff.input :attachedfile
        = ff.link_to_remove 'Remove this attachment', class: [:button, :round, :alert, :tiny]
  = f.link_to_add 'Add an attachment', :attachments, class: [:button, :round, :tiny]
  .row
    .small-2.columns= f.input :project_bg_colour, :as => :string, :input_html => {:class => :colourpicker }
  .row
    .small-2.columns= f.input :project_text_colour, :as => :string, :input_html => {:class => :colourpicker }
  .row
    .small-2.columns= f.input :project_link_colour, :as => :string, :input_html => {:class => :colourpicker }    
  .row
    .small-2.columns= f.input :active
  .row
    .small-2.columns= f.submit 'Save', :class => [:button, :round]
= content_for :jquery do
  $('.colourpicker').jPicker();