.row
  .small-12.columns
    %h2= t :edit_your_profile
= semantic_nested_form_for  @user, :html => {:multipart => true} do |f|
  .row
    .small-6.columns= f.input :name, input_html: {:required => ''}
  .row
    .small-6.columns= f.input :username, input_html: {:required => ''}
  .row
    .small-6.columns= f.input :email, input_html: {:required => ''}

  .row
    .small-6.columns= f.input :website
  .row
    .small-12.columns.medium-6= f.input :bio, input_html: {class: 'ckeditor'}
  .row
    .small-12.columns.medium-3= f.input :twitter_name
  .row
    .small-12.columns.medium-4= f.input :feed_urls
  = f.fields_for :authentications do |ff|

    .small-4.columns
      .row
        .small-10.columns= ff.input :provider, :as => :select, :collection => [ ['Facebook', 'facebook'], ['Google', 'google_oauth2'], ['Twitter', 'twitter']]
      .row
        .small-10.columns= ff.input :username
  .row
    .small-10.columns= f.link_to_add 'Add another authentication method', :authentications, class: [:button, :tiny, :round, :secondary]
  .row
    .small-8.columns
      = image_tag f.object.avatar.url(:thumb)
      %p= f.input :avatar 
  .row  
    .large-8.columns.small-12
      %fieldset
        %label Subscriptions
        %p
          Mailing lists exist for the following items:
        %ul
          - Subscription.all.map(&:item).uniq.each do |has_list|
            %li
              = link_to has_list.name, [:admin, has_list], target: :_blank
              - if current_user.subscribed_to?(has_list)
                %b Subscribed
                = link_to 'Unsubscribe', has_list.toggle_path, class: [:button, :alert, :round, :tiny, :sublink], remote: true
              - else
                = link_to 'Subscribe', has_list.toggle_path, class: [:button, :sublink, :tiny], remote: true
          
  .row
    .small-8.columns= f.submit "Save", :class => [:button, :round, :small]

= content_for :jquery do
  :plain
    $('a.sublink').bind('ajax:complete', function(evt, data, status, xhr) {
      var $this = $(this);
      $this.html(data.responseText);
      $this.toggleClass('alert');
    });