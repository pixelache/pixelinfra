- unless @member.memberships.empty?
  = content_for :page_tree do
    .left-collapse
      %span.leaf
        = link_to t(:members), '/members/'
      = " : "
      %strong
        = @member.name

.membership_container
  .row
    .small-10.small-offset-1.columns
      %h2
        = @member.name
        - unless @member.twitter_name.blank? 
          %span.twitter= link_to "@" + @member.twitter_name.gsub(/^@/, ''), "http://twitter.com/#{@member.twitter_name.gsub(/^@/, '')}", target: :_blank
  .row
    .small-10.small-offset-1.columns
      .board_explanation
        - if @memberships.find(year: @current_year).nil?
          = t :former_member
        - else
          - membership = @memberships.find(year: @current_year).first
          - if membership.hallitus == true
            = t(:on_hallitus) + " | "
          - if membership.hallitus_alternate == true
            = t(:on_hallitus_alternate) + " | "
        = t(:active_member_years)
        = @member.memberships.sort_by(&:year).map { |y| y.year.to_s  }.join(', ')

  
  .row
    .small-7.small-offset-1.columns
      &nbsp;
      .row
        .small-12.columns
          - unless @member.bio.blank?
            %h2= t :about
            .bio
              - linkfilter = AutoHtml::Link.new
              = raw linkfilter.call(@member.bio)
      - unless @member.posts.published.empty?
        .row
          .small-12.columns
            %h2= t(:recent_posts_by, member: @member.name)
            - @member.posts.published.order("published_at DESC")[0..3].each do |post|
              .member_post  
                .title= link_to post.name, post
                .date= l post.published_at, format: :long
                .row
                  .small-4.columns= image_tag post.image.url(:box)
                  .small-8.columns.excerpt= raw truncate_html(sanitize(post.body, tags: %w{b bold strong i italic em underline u}), :length => 300)
                .read_more= link_to t(:read_more), post
            = link_to t(:see_all), user_posts_path(@member), class: [:button, :tiny, :secondary]
                    
    .small-3.columns.member_sidebar.end
      .row
        .small-12.columns
          = image_tag @member.avatar.url(:box)
      %ul.accordion{:"data-accordion" => "", :"data-multi-expand" => "true"}
        - unless @member.website.blank?
          %li.accordion-item.is-active#personal_li{:"data-accordion-item" => ''}
            = link_to t(:personal_sites), "#personal", class: 'accordion-title'
            
            .arrow 
            #personal.accordion-content{:'data-tab-content' => ''}
              = link_to @member.website, @member.website, target: :_blank 
            
        - unless @member.feedcaches.empty?
          %li.accordion-item#feed_li{:"data-accordion-item" => ''}
            = link_to t(:feed), '#feed', class: 'accordion-title'
            .arrow
            #feed.accordion-content{:'data-tab-content' => ''}
              - @member.feedcaches.sort_by{|x| x.issued_at }.reverse.take(5).each_with_index do |feed, index|
                .feed_container.row
                  - if feed.source == 'twitter'
                    .small-3.columns= image_tag @member.avatar.url(:thumb)
                    .small-9.columns
                      %strong= @member.name
                      %span.twitter_name= link_to "@" + @member.twitter_name.gsub(/^@/, ''), "http://twitter.com/#{@member.twitter_name.gsub(/^@/, '')}"
                      %p
                        - linkfilter = AutoHtml::Link.new
                        = raw linkfilter.call(feed.content)
                      - if feed[index+1].nil?
                        %p.right= link_to t(:see_all), member_feed_path(@member)
                      
                      
        %li.accordion-item#contact_li{:"data-accordion-item" => ''}
          = link_to t(:contact), '#contact', class: 'accordion-title'
          .arrow
          #contact.accordion-content{class: @contact_form.name.blank? && @contact_form.email.blank? && @contact_form.message.blank? ? false : :active, :'data-tab-content' => ''}
            = form_for @contact_form, url: contact_member_path(@member) do |f|
              .row
                .small-12.columns= t :your_name
                .small-12.columns= f.text_field :name
              .row
                .small-12.columns= t :your_email
                .small-12.columns= f.text_field :email
              .row
                .small-12.columns= t :your_message
                .small-12.columns= f.text_area :message
              .row
                .small-12.columns= t :please_verify_your_humanity
                .small-12.columns= recaptcha_tags
              .row
                .small-12.columns= f.submit t(:send_message), class:  [:button, :tiny] 
          
