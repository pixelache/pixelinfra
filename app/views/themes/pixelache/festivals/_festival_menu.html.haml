// Calculate highest possible number of rows and set it to that
- highest = 0
- themelevel = 2
:css
  .festival_menu li a, .festival_menu .festival_top_header a:hover  {
    color: ##{@festival.tertiary_colour};
  }
  .festival_menu ul {
    border-right: 1px solid ##{@festival.tertiary_colour};
  }
  .festival_menu ul.inner {
    border-right: none;
  }
  .festival_menu li a:hover, .festival_menu .festival_top_header a , .festival_menu li a.active {
    color: ##{@festival.primary_colour};
  }

.small-12.columns.festival_top_header.text-left
  .fest_header_wrapper
    = link_to "Pixelache", '/'
    = " : "
    = link_to 'Festivals', festivals_path
    = " : "
    %span.name= link_to @festival.name, @festival
    %span.menu_reset
      = " : "
      = link_to t(:reset_menu), '#', class: :menu_reset_link

    
.left-collapse.festival_main_menu.column
  
  .large-2.columns.small-12.medium-2#nav_column_0
    %ul.text-right.first
      -# %li= link_to t(:events), "#", onmouseover: "javascript:toggleNavMenu('#events')", id: :events, class: (@event ? :active : false)
      - counter = 0
      - unless @festival.posts.published.empty?
        - counter += 1
        %li= link_to t(:news), festival_posts_path(@festival), class: controller.controller_name == 'posts' ? :active : false, onmouseover: "javascript:toggleWideNavMenu('#posts', 0)", id: "posts"
        
      - unless festival.pages.published.empty?

        - festival.pages.published.first.children.published.each do |c|
          - next unless c.festivalthemes.empty?
          - counter += 1
          - if c.children.empty? && c.slug != 'programme'
            %li= link_to c.name, festival_page_festival_path(festival, c), class: determine_hierarchy(:active, c, [@page, @festivaltheme, @event])
          - else
            %li= link_to c.name, "#", onmouseover: "javascript:toggleNavMenu('#page_#{c.id}', 0)", id: "page_#{c.id}", class: determine_hierarchy(:active, c, [@page, @festivaltheme, @event])
      - unless @festival.attendees.empty?
        - counter += 1
        - if Time.now.to_date > festival.end_at
          %li= link_to t(:who_was_there), festival_attendees_path(festival), class: controller.action_name == 'attendees' ? :active : false
        - else
          %li= link_to t(:who_is_coming), festival_attendees_path(festival), class: controller.action_name == 'attendees' ? :active : false
      - if Time.now.to_date > festival.end_at
        - counter += 1
        %li= link_to t(:archive), archive_festival_path(festival), class: controller.action_name == 'archive' ? :active : false
      - highest = counter unless highest > counter
        
 
  -# posts in special wide column
  .columns.medium-10#posts_menu.hide-for-small-only.nav_column_1{class: controller.controller_name == 'posts' ? :open : false}
    - unless festival.posts.published.empty?
      %ul.navhide
        - festivalposts = festival.posts.published.order('published_at desc')
        - festivalposts.take(@post.nil? ? 5 : (festivalposts.take(4).include?(@post) ? 4 : 3)).each do |post|
          %li= link_to post.name, post, class: (@post.nil? ? '' : (@post == post ? :active : ''))
        - unless @post.nil?
          - unless festivalposts.take(4).include?(@post)
            %li= link_to @post.name, @post, class: :active
        %li= link_to t(:all_news), festival_posts_path(@festival)
  -# 2nd columns, depth of 2
  .columns.small-12.nav_column_1{:class => (festival.festivalthemes.size <= 2) ? 'large-3 medium-3' : 'large-3 medium-3'}

    -# level 1 pages
    - unless festival.pages.published.empty?
      - festival.pages.published.first.find_all_by_generation(1).published.each do |p|
        - next unless p.festivalthemes.empty?
        - counter = 0
        %ul.navhide{id: "page_#{p.id}_menu", class: [determine_hierarchy(:open, p, [@page, @festivaltheme, @event]), p.children.map(&:children).flatten.empty?  && @festival.festivalthemes.nil? ? :inner: false] }
          - unless p.body.blank?
            - counter += 1
            %li= link_to p.name + " overview", "/festivals/#{@festival.slug}/#{p.slug}" 
          - p.children.published.each do |pp|
            - counter += 1
            - if pp.children.empty?
              %li= link_to pp.name, festival_page_festival_path(@festival, pp), class: determine_hierarchy(:active, pp, [@page, @festivaltheme, @event])
            - else
              %li= link_to pp.name, "#", onmouseover: "javascript:toggleNavMenu('#page_#{pp.id}', 1)", id: "page_#{pp.id}", class: determine_hierarchy(:active, pp, [@page, @festivaltheme, @event] )
          - if p.slug == 'programme'
          
            - if festival.festivalthemes.empty?
              -# no festival themes, so what?
              = content_for :jquery do
                $("ul.navhide#page_#{p.id}_menu").addClass('inner');
              
              - festival.events.published.sort_by(&:start_at).each do |e|
                - counter += 1

                %li= link_to e.name, e, class: determine_hierarchy(:active, e, [@page, @festivaltheme, @event])
            - elsif festival.festivalthemes.size <= 2
              -# display themes directly if 2 or less, otherwise make themes menu
              - festival.festivalthemes.each do |theme|
                - counter += 1
                %li= link_to theme.name, festival_theme_festival_path(@festival, theme), onmouseover: "javascript:toggleNavMenu('#theme_#{theme.id}', 1)", id: "theme_#{theme.id}", class: determine_hierarchy(:active, theme, [@page, @festivaltheme, @event])
              - unless festival.events.published.to_a.delete_if{|x| x.festivalthemes.empty? }.empty?
                - if counter < 5 && festival.events.published.to_a.delete_if{|x| !x.festivalthemes.empty? }.size <= 3

                  - festival.events.published.to_a.delete_if{|x| !x.festivalthemes.empty? }.sort_by(&:start_at).each do |e|
                    - counter += 1
                    %li= link_to e.name, e, class: determine_hierarchy(:active, e, [@page, @festivaltheme, @event])
                  
                - else
                  - counter += 1
                  %li= link_to "Other activities", '#', onmouseover: "javascript:toggleNavMenu('#otherevents', 1)", id: "otherevents", class: @event.nil? ? false : (@event.festivalthemes.empty? ? :active : false)

            - else  
              - # 3 or more themes, so make another menu level
              - counter += 1
              - if counter > 1
                %li= link_to t(:themes), '#', onmouseover: "javscript:toggleNavMenu('#themes', 1)", id: "themes", class: (@event.nil? && @festivaltheme.nil?) ? false : :active
              - else
                - themelevel = 1
                - festival.festivalthemes.each do |theme|
                  - counter += 1
                  %li= link_to theme.name, festival_theme_festival_path(@festival, theme), onmouseover: "javascript:toggleNavMenu('#theme_#{theme.id}', 1)", id: "theme_#{theme.id}", class: determine_hierarchy(:active, theme, [@page, @festivaltheme, @event])
                - unless festival.events.published.to_a.delete_if{|x| x.festivalthemes.empty? }.empty?
                  - counter += 1
                  %li= link_to "Other activities", '#', onmouseover: "javascript:toggleNavMenu('#otherevents', 1)", id: "otherevents", class: @event.nil? ? false : (@event.festivalthemes.empty? ? :active : false)
        - highest = counter unless highest > counter
          
          
  -# 3rd column
  
  - if themelevel == 1
    .small-12.large-7.medium-7.columns.nav_column_2
      - festival.festivalthemes.each do |theme|
        - counter = 0
        - themeitems = theme.pages.published + theme.events.published.sort_by(&:start_at)
        .row.navhide{id: "theme_#{theme.id}_menu", class: determine_hierarchy(:open, theme, [@page, @festivaltheme, @event])}
          - if themeitems.size > 6
          
            .medium-6.columns
              %ul.inner
                - themeitems.slice(0, themeitems.length / 2).each do |ti|
                  - counter += 1
                  - if ti.class == Page
                    %li= link_to ti.name, festival_page_festival_path(@festival, ti),  class: determine_hierarchy(:active, ti, [@page, @festivaltheme, @event])
                  - elsif ti.class == Event
                    %li= link_to ti.name, ti, class: determine_hierarchy(:active, ti, [@page, @festivaltheme, @event])
            .medium-6.columns
              - counter = 0
              %ul.inner
                - themeitems[(themeitems.size / 2 )..-1].each do |ti|
                  - counter += 1
                  - if ti.class == Page
                    %li= link_to ti.name, festival_page_festival_path(@festival, ti),  class: determine_hierarchy(:active, ti, [@page, @festivaltheme, @event])
                  - elsif ti.class == Event
                    %li= link_to ti.name, ti, class: determine_hierarchy(:active, ti, [@page, @festivaltheme, @event])   
          - else
            .small-12.columns
              %ul.inner
                - themeitems.each do |ti|
                  - counter += 1
                  - if ti.class == Page
                    %li= link_to ti.name, festival_page_festival_path(@festival, ti),  class: determine_hierarchy(:active, ti, [@page, @festivaltheme, @event])
                  - elsif ti.class == Event
                    %li= link_to ti.name, ti, class: determine_hierarchy(:active, ti, [@page, @festivaltheme, @event])
                           
        - highest = counter unless highest > counter
      - unless festival.events.published.to_a.delete_if{|x| x.festivalthemes.empty? }.empty?
        - counter = 0
        %ul.navhide.inner#otherevents_menu{ class: @event.nil? ? false : (@event.festivalthemes.empty? ? :open : false) }
          - festival.events.published.to_a.delete_if{|x| !x.festivalthemes.empty? }.sort_by(&:start_at).each do |e|
            - counter += 1
            %li= link_to e.name, e, class: determine_hierarchy(:active, e, [@page, @festivaltheme, @event])
  - else
    .small-12.large-3.medium-3.columns.nav_column_2
      - if festival.festivalthemes.size <= 2 && !festival.festivalthemes.empty?
        - #themes are directly listed in last column, so put events
        - festival.festivalthemes.each do |theme|
          - counter = 0
          %ul.navhide{id: "theme_#{theme.id}_menu", class:  determine_hierarchy(:open, theme, [@page, @festivaltheme, @event]) }
            - theme.events.published.sort_by(&:start_at).each do |e|
              - counter += 1
              %li= link_to e.name, e, class: determine_hierarchy(:active, e, [@page, @festivaltheme, @event])
          - highest = counter unless highest > counter
        - unless festival.events.published.to_a.delete_if{|x| x.festivalthemes.empty? }.empty?
          - counter = 0
          %ul.navhide#otherevents_menu{ class: @event.nil? ? false : (@event.festivalthemes.empty? ? :open : false) }
            - festival.events.published.to_a.delete_if{|x| !x.festivalthemes.empty? }.sort_by(&:start_at).each do |e|
              - counter += 1
              %li= link_to e.name, e, class: determine_hierarchy(:active, e, [@page, @festivaltheme, @event])
          - highest = counter unless highest > counter
      
    
      - else
        -# themes need to be listed here and actual events bumped to column #4
        - if festival.festivalthemes.size < 2
          
        - else
          - counter = 0
          %ul.navhide#themes_menu{class: (@event.nil? && @festivaltheme.nil?) ? false : :open}  
            - festival.festivalthemes.each do |theme|
              - counter += 1
              %li= link_to theme.name, festival_theme_festival_path(@festival, theme), onmouseover: "javascript:toggleNavMenu('#theme_#{theme.id}',2)", id: "theme_#{theme.id}", class: determine_hierarchy(:active, theme, [@page, @festivaltheme, @event])
            - unless festival.events.published.to_a.delete_if{|x| x.festivalthemes.empty? }.empty?
              - counter += 1
              %li= link_to "Other activities", '#', onmouseover: "javascript:toggleNavMenu('#otherevents', 2)", id: "otherevents", class: @event.nil? ? false : (@event.festivalthemes.empty? ? :active : false)
          - highest = counter unless highest > counter

      - unless festival.pages.published.empty? 
        - festival.pages.published.first.find_all_by_generation(2).each do |p|
          - counter = 0
          %ul.navhide{id: "page_#{p.id}_menu", class: [determine_hierarchy("open", p, [@page, @festivaltheme, @event]), p.children.map(&:children).flatten.empty? ? :inner: false] }  
            - unless p.body.blank? 
              %li= link_to p.name + " overview", festival_page_festival_path(@festival, p), class:  @page.blank? ? false : (@page == p ? :active : false)
              - counter += 1
            - p.children.published.each do |pp|
              - counter += 1
              - if pp.children.empty?
                %li= link_to pp.name, festival_page_festival_path(@festival, pp), class: determine_hierarchy(:active, pp, [@page, @festivaltheme, @event])
              - else
                %li= link_to pp.name, "#", onmouseover: "javascript:toggleNavMenu('#page_#{pp.id}', 2)", id: "page_#{pp.id}", class: determine_hierarchy(:active, pp, [@page, @festivaltheme, @event] )
          - highest = counter unless highest > counter

  -# make 4th column if needed
  .small-12.columns.final.nav_column_3{:class => (festival.festivalthemes.size <= 2) ? 'large-4 medium-4' : 'large-4 medium-4'}
    - unless themelevel == 1
      - festival.festivalthemes.each do |theme|
        - counter = 0
        %ul.navhide.inner{id: "theme_#{theme.id}_menu", class: determine_hierarchy(:open, theme, [@page, @festivaltheme, @event])}
          - theme.pages.published.each do |p|
            - counter += 1
            %li= link_to p.name, festival_page_festival_path(@festival, p),  class: determine_hierarchy(:active, p, [@page, @festivaltheme, @event])
          - theme.events.published.sort_by(&:start_at).each do |e|
            - counter += 1
            %li= link_to e.name, e, class: determine_hierarchy(:active, e, [@page, @festivaltheme, @event])
        - highest = counter unless highest > counter
      - unless festival.events.published.to_a.delete_if{|x| x.festivalthemes.empty? }.empty?
        - counter = 0
        %ul.navhide.inner#otherevents_menu{ class: @event.nil? ? false : (@event.festivalthemes.empty? ? :open : false) }
          - festival.events.published.to_a.delete_if{|x| !x.festivalthemes.empty? }.sort_by(&:start_at).each do |e|
            - counter += 1
            %li= link_to e.name, e, class: determine_hierarchy(:active, e, [@page, @festivaltheme, @event])
        - highest = counter unless highest > counter 
        
    - unless festival.pages.published.empty?
      - festival.pages.published.first.find_all_by_generation(3).each do |p|
        - next if p.children.empty?
        - counter = 0
        %ul.navhide.inner{id: "page_#{p.id}_menu", class:  determine_hierarchy(:open, p, [@page, @festivaltheme, @event])}
        
          - unless p.body.blank?
            %li= link_to p.name + " overview", festival_page_festival_path(@festival, p), class:  determine_hierarchy(:active, p, [@page, @festivaltheme, @event])
            - counter += 1
          - p.children.published.each do |pp|
            %li= link_to pp.name, pp, class: determine_hierarchy(:active, pp, [@page, @festivaltheme, @event])
            - counter += 1
          - highest = counter unless highest > counter
   
- highest_total = ((highest * 1.5) - 1 ).to_f.to_s + "rem"   
- list = ((highest * 1.25)).to_f.to_s  + "rem" 
= content_for :jquery do
  :plain
    $('.festival_main_menu').css('height', '#{highest_total}');
    $('#main').css('top', $('.festival_menu').height() - 2);
    $('#main').css('margin-bottom', $('.festival_menu').height() - 2);
    $('.festival_menu ul').css('height', '#{list}');
    if ( $('.page_tree').length ) {
      $('.page_tree').css('top',  $('.festival_menu').height() );
      $('#main').css('top', $('.festival_menu').height() + 38 + $('.page_tree').height());
      $('#main').css('margin-bottom', $('.festival_menu').height() + 38 + $('.page_tree').height());
    } 
    if(!!('ontouchstart' in window) ) {
      $('.festival_main_menu').css('height', 'auto');
      if ($('.navhide.open').length) {

        $('ul.first').addClass('rolled');
        $('ul.rolled').slideUp();
        $('.festival_menu .festival_top_header .menu_reset').css('display', 'inline');
        $('#nav_column_0 ul, .nav_column_1 ul, .nav_column_2 ul, .nav_column_3 ul').css('height', 'auto');
        $('#nav_column_0, .nav_column_1, .nav_column_2, .nav_column_3').css('border-bottom-style', 'solid').css('border-bottom-width', '1px');
        $('ul.open li :not(a.active)').parent('li').css('display', 'none');
        $('ul.inner.open li').css('display', 'block');
        
        $('.menu_reset_link').click(function() {
          reset_mobile_menu();
          $('.festival_menu ul').css('height', '#{list}');
          return false;
        });
      }
    }

                    