.strip{style: project.background_css, id: "project_#{project.id.to_s}"}

  .title_box.columns.hide-for-small-only{style: project.background_css}
    .row
      .large-10.columns.large-offset-1.titles.medium-12
        
        %h2{style: project.name.longest_word.size > 15 ? "font-size: 1.8rem; line-height: 2.2rem" : ""}= link_to project.name, project
        .subtitle= project.short_description
        - if project.evolvedto
          .evolved= link_to t(:evolved_into, project: project.evolvedto.name, year: project.evolvedto.evolution_year), '#', onclick: "$('#project_#{project.evolvedto.id.to_s}').parent().slideDown(); scrollTo('#project_#{project.evolvedto.id.to_s}'); ", style: project.background_css
    - unless project.children.visible.empty?
      .children_strip= link_to raw(pluralize(project.descendants.visible.flatten.size, t(:subproject)) + "&#9660;"), '#', style: "color: ##{project.project_text_colour}", onclick: "$('#subprojects_#{project.id.to_s}').slideToggle(); return false;"
      
  .selector.trigger.columns{style: "background-color: rgb(#{project.colour_offset}); opacity: 1;"} &nbsp;
  .image_box{style: project.background_image_css}
    .row.show-for-small-only{style: "background-color: transparent; color:##{project.project_text_colour};" }
      .small-10.columns.small-offset-1.titles
        
        %h2{style: "background-color: ##{project.project_bg_colour}; float: left" }= link_to project.name, project, style: "color:##{project.project_text_colour};"
        - unless project.short_description.blank?
          .subtitle{style: "background-color: ##{project.project_bg_colour}; color:##{project.project_text_colour};" }= project.short_description
    .image_overlay.hide-for-small-only{style: "background-color: rgb(#{project.colour_offset}); opacity: 0.2;"}
      .occluded{style: "color: ##{project.project_text_colour}"}
        - counter = 0
        %ul
          - unless project.children.visible.empty?
            - project.children.visible.shuffle.each do |subproject|
              - next if subproject.events.published.empty?
              - if counter < 7
                %li.subproject= link_to subproject.name, subproject
                - counter += 1
                - subproject.events.published.shuffle.take(2).each do |event|
                  - if counter < 7
                    %li.event= link_to event.name, subproject
                    - counter += 1
          - if counter < 7
            - project.events.published.take(6).each do |event|
              %li.event= link_to event.name, project
              - counter += 1
          - if counter < 7
            - project.posts.published.take(4).each do |post|
              - if counter < 7
                %li.post= link_to post.name, post
                - counter += 1
          - if counter < 7
            - project.pages.published.shuffle.take(4).each do |page|
              - if counter < 7
                %li.project_page= link_to page.name, page
                - counter += 1

- unless project.children.visible.flatten.empty?
  .subprojects{id: "subprojects_#{project.id.to_s}"}                
    - project.children.visible.flatten.each do |subproject|
      - if active_projects.include?(subproject)
        .active_strip{style: subproject.background_css}
          .row
            .small-12.columns.text-center
              = link_to t(:active_project) + ": ", '#',  onclick: "scrollTo('#project_#{subproject.id.to_s}')", style: subproject.background_css
              = link_to subproject.name, '#', onclick: "scrollTo('#project_#{subproject.id.to_s}')", style: subproject.background_css
      - else
        = render :partial => 'project_strip', locals: {project: subproject, active_projects: active_projects}
    .end_strip.text-center{style: project.background_css}= t(:end_of_subprojects, project: project.name)