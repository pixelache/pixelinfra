.page{class: @page.slug}
  .carousel
    - unless @page.photos.blank?
      .slide{style: "background: url(#{@page.photos.first.filename.url.gsub('development', 'production')}) center bottom no-repeat; background-size: cover"} &nbsp;
        

  .overlapping_divider 
    .text= @page.title


        
  .row.body-bottom
    .columns.small-10.medium-7.small-centered
      = raw @page.body

  - if @page.slug == 'locations'

    .map
      #mapcontainer
   
    = content_for :jquery do
      :plain
        var gmarkers = [];
        var imarkers = [];
        
        function initialize() {
          var myLatlng = new google.maps.LatLng(60.186349, 24.971247);
          var myOptions = { zoom: 13, 
                center: myLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                styles: [{"featureType":"administrative","elementType":"labels.text.fill","stylers":[{"color":"#444444"}]},{"featureType":"administrative.neighborhood","elementType":"labels.text","stylers":[{"visibility":"on"},{"color":"#ec9f43"},{"weight":"0.01"}]},{"featureType":"landscape","elementType":"all","stylers":[{"color":"#f2f2f2"}]},{"featureType":"landscape","elementType":"geometry","stylers":[{"visibility":"on"},{"color":"#f0d8bc"},{"lightness":"0"}]},{"featureType":"landscape","elementType":"labels.text","stylers":[{"weight":"0.64"}]},{"featureType":"poi","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi","elementType":"geometry","stylers":[{"visibility":"on"},{"weight":"1"},{"lightness":"63"},{"color":"#dfc4a3"}]},{"featureType":"poi","elementType":"labels","stylers":[{"color":"#ec9f43"}]},{"featureType":"poi.park","elementType":"geometry","stylers":[{"color":"#f4c58e"},{"lightness":"1"}]},{"featureType":"road","elementType":"all","stylers":[{"saturation":-100},{"lightness":45}]},{"featureType":"road.highway","elementType":"all","stylers":[{"visibility":"simplified"}]},{"featureType":"road.highway","elementType":"geometry","stylers":[{"visibility":"on"},{"color":"#ec870f"},{"weight":"0.62"},{"lightness":"53"}]},{"featureType":"road.highway","elementType":"labels.text","stylers":[{"visibility":"on"},{"color":"#c7cece"},{"weight":"0.01"}]},{"featureType":"road.highway","elementType":"labels.text.fill","stylers":[{"weight":"0.01"}]},{"featureType":"road.highway","elementType":"labels.text.stroke","stylers":[{"color":"#ffffff"},{"visibility":"on"},{"weight":"0.01"}]},{"featureType":"road.arterial","elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"water","elementType":"all","stylers":[{"color":"#bfdbf1"},{"visibility":"on"}]},{"featureType":"water","elementType":"geometry","stylers":[{"visibility":"on"},{"color":"#cde1f0"},{"lightness":"-3"}]},{"featureType":"water","elementType":"labels.text.fill","stylers":[{"weight":"0.25"},{"color":"#888d8d"}]},{"featureType":"water","elementType":"labels.text.stroke","stylers":[{"weight":"0.80"}]}]
             }
          map = new google.maps.Map(document.getElementById('mapcontainer'), myOptions);
          var bounds = new google.maps.LatLngBounds();
        
      - @festival.events.published.each do |e|
        - next unless e.place
        - next unless e.place.latitude
        - next if e.location_tbd == true
        - next if e.place.slug =~ /^various-locations/
        :plain
          var contentString#{e.id.to_s} = '<div class="infowindow_content">'+
                '<h4 class="firstHeading">#{escape_javascript(e.name)}</h4>'+
                '<div class="bodyContent">'+
                '<p>#{escape_javascript(truncate_html(e.description, :length => 150))}'+
                '<a href="#{url_for(e)}" target="blank">#{t(:read_more)}</a></p>'+
                '<p>Where: #{e.place.name}</p>'+
                '<p>When: #{date_range(e.start_at, e.end_at)}</p>'+
                '</div>'+
                '</div>';
          var infowindow#{e.id.to_s} = new google.maps.InfoWindow({
                content: contentString#{e.id.to_s},
                maxWidth: 350
          });                
          var ll#{e.id.to_s} =  new google.maps.LatLng(#{e.place.latitude}, #{e.place.longitude});
          bounds.extend(ll#{e.id.to_s});
          var marker#{e.id.to_s} = new google.maps.Marker({  position: ll#{e.id.to_s}, map: map, 
            icon: '/assets/livingspaces/images/pin.png',
            title: '#{escape_javascript(e.name)}'  });
          gmarkers[#{e.id.to_s}] = marker#{e.id.to_s};
          google.maps.event.addListener(marker#{e.id.to_s}, 'click', function() {
            infowindow#{e.id.to_s}.open(map,marker#{e.id.to_s});
          });
          
      - if @festival.festivalthemes.find('helsinki-inside-out')
        - experiences = @festival.festivalthemes.find('helsinki-inside-out').experiences.approved
          - unless experiences.blank?
            - experiences.each do |e|
            :plain
              var contentString_#{e.id.to_s} = '<div class="infowindow_content">'+
                    '<h4 class="firstHeading">#{escape_javascript(e.title)}</h4>'+
                    '<div><em><a href="/festivals/festival-2015/theme/helsinki-inside-out" target="_blank">Helsinki Inside&sdot;Out programme</a></em></div>'+
                    '<div class="bodyContent">'+
                    '<p>#{escape_javascript(e.description)}</p>'+
                    '<p>Where: #{e.location}</p>'+
                    '<p>When: #{e.start_at.strftime("%H:%M")} - #{e.end_at.strftime("%H:%M")}</p>'+
                    '</div>'+
                    '</div>';
              var infowindow_#{e.id.to_s} = new google.maps.InfoWindow({
                    content: contentString_#{e.id.to_s},
                    maxWidth: 350
              });                
              var ll_#{e.id.to_s} =  new google.maps.LatLng(#{e.latitude}, #{e.longitude});
              bounds.extend(ll_#{e.id.to_s});
              var marker_#{e.id.to_s} = new google.maps.Marker({  position: ll_#{e.id.to_s}, map: map, 
                icon: '/assets/livingspaces/images/inverted_pin.png',
                title: '#{escape_javascript(e.title)}'  });
              imarkers[#{e.id.to_s}] = marker_#{e.id.to_s};
              google.maps.event.addListener(marker_#{e.id.to_s}, 'click', function() {
                infowindow_#{e.id.to_s}.open(map,marker_#{e.id.to_s});
              });
        
      :plain
          map.fitBounds(bounds);
          zoomChangeBoundsListener = 
              google.maps.event.addListenerOnce(map, 'bounds_changed', function(event) {
                  if (this.getZoom()){
                      this.setZoom(12);
                  }
          });
          setTimeout(function(){google.maps.event.removeListener(zoomChangeBoundsListener)}, 2000);
          
          return map;
        }
        //map = initialize();
        map = google.maps.event.addDomListener(window, 'load', initialize);
        markers = gmarkers;